{"version":3,"sources":["services/persons.js","components/Entries.js","components/Forms.js","App.js","index.js"],"names":["URL","getPersons","axios","get","then","response","data","Person","person","handleDelete","name","number","onClick","Entries","persons","search","handleDel","filter","p","RegExp","test","map","id","NewEntryForm","props","onSubmit","handleSubmit","value","newName","onChange","handleNewName","newNumber","handleNewNumber","type","PersonSearch","handleSearch","Input","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","display","App","useState","setPersons","setNewName","setNewNumber","setSearch","notification","setNotification","showNotification","setTimeout","useEffect","event","target","preventDefault","newPerson","personInDB","find","undefined","window","confirm","put","updatePerson","post","concat","delete","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de5ade98.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = \"/api/persons\";\n\nexport const getPersons = () => (\n    axios.get(URL)\n        .then(response => response.data)\n);\n\nexport const postPerson = (person) => (\n    axios\n        .post(URL, person)\n        .then(response => response.data)\n)\n\nexport const deletePerson = (id) => (\n    axios\n        .delete(`${URL}/${id}`)\n        .then(() => getPersons())\n);\n\nexport const updatePerson = (newPerson, id) => (\n    axios\n        .put(`${URL}/${id}`, newPerson)\n        .then(() => getPersons())\n);","import React from \"react\";\n\nconst Entries = ({persons, search, handleDel}) => (\n    <div>\n        <h2>Numbers</h2>\n        {persons.filter(p => new RegExp(search, 'i').test(p.name))\n            .map(p => <Person key={p.id} person={p} handleDelete={handleDel}/>)}\n    </div>\n);\n\nconst Person = ({person, handleDelete}) => {\n    return (\n        <div>\n            <p>{person.name} {person.number}</p>\n            <button onClick={() => handleDelete(person)}>Delete</button>\n        </div>\n    );\n}\n\nexport default Entries;","import React from \"react\";\n\nexport const NewEntryForm = (props) => (\n    <div>\n        <h2>Add a new entry</h2>\n        <form onSubmit={props.handleSubmit}>\n            <Input name={\"Name\"} value={props.newName} onChange={props.handleNewName}/>\n            <Input name={\"Number\"} value={props.newNumber} onChange={props.handleNewNumber}/>\n            <div>\n                <button type=\"submit\">Add</button>\n            </div>\n        </form>\n    </div>\n);\n\nexport const PersonSearch = ({search, handleSearch}) => (\n    <div>\n        <h2>Search</h2>\n        <Input name={\"Query\"} value={search} onChange={handleSearch}/>\n    </div>\n)\n\nconst Input = ({name, value, onChange}) => {\n    return <div>{name}: <input value={value} onChange={onChange}/></div>\n}","import React, {useState, useEffect} from 'react';\nimport {getPersons, postPerson, deletePerson, updatePerson} from './services/persons.js';\nimport Entries from \"./components/Entries\";\nimport {PersonSearch, NewEntryForm} from \"./components/Forms\";\n\nconst Notification = ({message, color}) => {\n    const style = {\n        color: color,\n        background: 'whitesmoke',\n        fontSize: 20,\n        borderStyle: `solid`,\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if (message === null) {\n        style.display = 'none'\n    }\n\n    return (\n        <span style={style}>{message}</span>\n    );\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [search, setSearch] = useState('');\n    const [notification, setNotification] = useState({message: null, color: 'green'});\n\n    useEffect(() => getPersons()\n        .then(response => setPersons(response)), []\n    );\n\n    function handleNewName(event) {\n        setNewName(event.target.value);\n    }\n\n    function handleNewNumber(event) {\n        setNewNumber(event.target.value);\n    }\n\n    function handleSearch(event) {\n        setSearch(event.target.value);\n    }\n\n    function handleDelete(person) {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            deletePerson(person.id)\n                .then(response => setPersons(response))\n                .catch(() => showNotification(`'${person.name}' was already deleted from server.`, 'red'))\n        }\n    }\n\n    function showNotification(message, color) {\n        setNotification({...notification, message: message, color: color});\n        setTimeout(() => setNotification({...notification, message: null}), 4000)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        }\n\n        let personInDB = persons.find(p => p.name === newName);\n        let message = '';\n\n        if (personInDB !== undefined && window.confirm(`${newPerson.name} is already in the phonebook, replace the old number with a new one?`)) {\n            updatePerson(newPerson, personInDB.id)\n                .then(response => {\n                    setPersons(response);\n                });\n            message = `Changed number of '${newName}'`\n        } else {\n            postPerson(newPerson)\n                .then(response => {\n                    setPersons(persons.concat(response));\n                });\n            message = `Added '${newName}'`\n        }\n        showNotification(message, 'green');\n        setNewNumber('');\n        setNewName('');\n    }\n\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification message={notification.message} color={notification.color}/>\n            <PersonSearch search={search} handleSearch={handleSearch}/>\n            <NewEntryForm\n                handleSubmit={handleSubmit}\n                newName={newName}\n                handleNewName={handleNewName}\n                newNumber={newNumber}\n                handleNewNumber={handleNewNumber}/>\n            <Entries persons={persons} search={search} handleDel={handleDelete}/>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}